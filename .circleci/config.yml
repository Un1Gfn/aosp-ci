# https://github.com/Un1Gfn/avx/blob/master/.circleci/config.yml

# /exp01/config.yml
# /exp02/config.yml
# /.circleci/config.yml

version: 2

jobs:

  build:

    # https://circleci.com/docs/2.0/configuration-reference/#branches
    branches:
      only:
        - xenial-aosp

    # https://circleci.com/docs/2.0/configuration-reference/#available-machine-images
    # Xenial Xerus
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: false

    resource_class: medium

    steps:

      - run:
          name: "Root password"
          command: |
            echo "root:1" | sudo chpasswd

      - run:
          name: "Machine info"
          command: |
            echo
            echo "$(nproc) $(nproc --all)"
            echo
            sudo -i lscpu
            echo
            df -h
            echo

      - run:
          name: "[M] BASH_ENV"
          command: |
            cat <<"EOF" >"$BASH_ENV"
            #
            export apt="sudo -i apt-get -q --allow-downgrades --allow-remove-essential --allow-change-held-packages --allow-unauthenticated"
            # export apt="sudo -i apt-get -q --allow-downgrades --allow-remove-essential --allow-change-held-packages"
            #
            export PROJ_DIR="/root/project"
            export _JAVA_OPTIONS="-Xmx$RAM"
            #
            EOF
            source "$BASH_ENV"

      # https://packages.ubuntu.com/
      # git repo time inetutils rxvt-unicode-terminfo openssh sudo
      # wget tree nano vim pv xz unzip
      # - run:
      #     name: "[M] apt"
      #     command: |
      #       sudo -i apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 78BD65473CB3BD13
      #       sudo -i apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 78BD65473CB3BD13
      #       $apt update
      #       cat <<"EOF" | xargs $apt
      #         tree duc
      #         openjdk-8-jdk
      #       EOF

      # - run:
      #     name: "Verify J*8"
      #     command: |
      #       # ?

      # Found a cache from build ? at v1-garbage-?
      # Size: ?
      # Cached paths:
      #   * /home/circleci/garbage
      # Downloading cache archive...
      # Validating cache...
      # Unarchiving cache...
      - restore_cache:
          key: v3-garbage

      # https://circleci.com/docs/2.0/configuration-reference/#run
      - run:
          name: "Download (dummy) (overwrite)"
          no_output_timeout: 15m # ETA ?m?s
          command: |
            echo
            rm -fv ~/garbage || true
            echo
            dd if=/dev/urandom of=~/garbage count=$((15*2048000)) # status=progress
            echo
            ls -l ~/garbage
            ls -lh ~/garbage
            echo
            echo

      # https://superuser.com/questions/603547/how-can-i-limit-the-size-of-the-android-source-i-need-to-download-with-repo-syn
      # https://source.android.com/setup/develop/repo
      # wall clock time - 18:41.30 # 13GiB # lineage
      # wall clock time - ??:??.?? # ??GiB # aosp
      # - run:
      #     name: "Download"
      #     command: |
      #       echo
      #       sudo -i df -h
      #       echo
      #       cat <<"EOF" | $chroot_bash
      #       pwd
      #       echo
      #       df -h
      #       echo
      #       mkdir -p /lineage
      #       cd /lineage
      #       for i in system global; do
      #         git config --$i user.email "darren19970810@gmail.com"
      #         git config --$i user.name "Darren Ng"
      #       done
      #       echo
      #       yes | repo init --depth=1 -u https://github.com/LineageOS/android.git -b lineage-15.1
      #       echo
      #       /usr/bin/time --format="\n  wall clock time - %E\n" repo sync -c
      #       echo
      #       du -hd 0 .repo
      #       echo
      #       df -h
      #       echo
      #       source build/envsetup.sh
      #       EOF

      # Skipping cache generation, cache already exists for key: v1-garbage
      # Found one created at 2020-04-15 05:51:32 +0000 UTC
      # - save_cache:
      #     key: v1-garbage
      #     paths:
      #       - ~/garbage

      - save_cache:
          key: v3-garbage-{{ epoch }}
          paths:
            - ~/garbage

      # - run:
      #     name: "Free up space"
      #     command: |
      #       df
      #       du
      #       https://www.google.com/search?q=apt+clean+cache&oq=apt+clean+cache
      #       $pkg purge
      #       rm -rf .repo
      #       rm -rf /usr/local

      # - run:
      #     name: "Build"
      #     command: |
      #       source build/envsetup.sh

      # - run:
      #     name: "[M] Wait for SSH"
      #     command: |
      #       echo
      #       i=0
      #       while true; do
      #         sleep 60
      #         i=$((i+1))
      #         echo "$i min"
      #       done
      #       /usr/bin/false

      # - run:
      #     name: "[M] Stop"
      #     command: |
      #       /usr/bin/false

      # - checkout # github -> /root/project

      # https://circleci.com/docs/2.0/artifacts/#artifacts-overview
      # - store_artifacts:
      #     path: /nproc
      # - store_artifacts:
      #     path: /lscpu
