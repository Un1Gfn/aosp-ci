# https://github.com/Un1Gfn/avx/blob/master/.circleci/config.yml

# /exp01/config.yml
# /exp02/config.yml
# /.circleci/config.yml

version: 2

jobs:

  build:

    # https://circleci.com/docs/2.0/configuration-reference/#available-machine-images
    # Xenial Xerus
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: false

    resource_class: medium

    steps:

      - run:
          name: "[M] chpasswd"
          command: |
            echo "root:1" | sudo chpasswd

      - run:
          name: "[M] Hardware info"
          command: |
            pwd
            echo "$(nproc) $(nproc --all)" | sudo tee /m_nproc
            sudo tee </proc/cpuinfo /m_cpuinfo

      # https://hub.docker.com/_/archlinux/?tab=tags
      # https://stackoverflow.com/questions/28574433/do-docker-containers-retain-file-changes
      # https://stackoverflow.com/questions/2935183/bash-infinite-sleep-infinite-blocking
      - run:
          name: "[M] BASH_ENV"
          command: |
            cat <<"EOF" >"$BASH_ENV"
            #
            export pkg="sudo -i apt-get -q --yes --allow-downgrades --allow-remove-essential --allow-change-held-packages --allow-unauthenticated"
            #
            export bootstrap_dir="/arch"
            export chroot="sudo -i arch-chroot $bootstrap_dir"
            #
            export  update="pacman -Syy --noprogressbar"
            export   unreg="pacman -D --asdeps"
            export partial="pacman -S --needed --nodeps --noprogressbar --noconfirm" # one --nodeps skip ver chk only
            export      gc='pacman -Rssc --noprogressbar --noconfirm $(pacman -Qdttq)'
            export upgrade="pacman -Suu --noprogressbar --noconfirm"
            #
            export PROJ_DIR="/root/project"
            export _JAVA_OPTIONS="-Xmx$RAM"
            #
            EOF
            source "$BASH_ENV"

      - run:
          name: "[M] Prepare chroot dir"
          command: |
            sudo -i apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 78BD65473CB3BD13
            sudo -i apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 78BD65473CB3BD13
            $pkg update
            $pkg install arch-install-scripts
            curl -sS -LOJR http://mirror.rackspace.com/archlinux/iso/2020.04.01/archlinux-bootstrap-2020.04.01-x86_64.tar.gz
            curl -sS -LOJR http://mirror.rackspace.com/archlinux/iso/2020.04.01/sha1sums.txt
            sha1sums -c sha1sums.txt
            sudo -i mkdir "$bootstrap_dir"
            F="$(realpath *bootstrap*)"
            echo "$F"
            cd "$bootstrap_dir"
            tar xf "$F"
            unset F

      # - run:
      #     name: "[M] Stop"
      #     command: |
      #       /usr/bin/false

      - run:
          name: "[M] Wait for SSH"
          command: |
            echo
            i=0
            while true; do
              sleep 60
              i=$((i+1))
              echo "$i min"
            done
            /usr/bin/false

      # All the hassle that ...
      # ... needed deps are not removed and installed again
      # ... uneeded deps are not upgraded before removed

      # Misleading
      # - run:
      #     name: "[M] copy BASH_ENV to container"
      #     # https://circleci.com/docs/2.0/env-vars/#using-bash_env-to-set-environment-variables
      #     command: |
      #       $docker_cp "$BASH_ENV" "$container":/etc/profile.d/circleci.sh

      # udpate -> unreg||true -> partial -> gc||true -> upgrade
      - run:
          name: "[C] Pacman"
          command: |
            $docker_exec $update

            cat <<"---" | xargs $chroot $unreg || true
              llvm-libs
              gcc-libs
              pcre
              gpm
              libpng
              avahi
            ---

            # cat <<"---" | xargs $docker_exec $partial
            #   git rxvt-unicode-terminfo openssh nmap
            #   wget tree nano vim pv xz unzip lsof pciutils tmux
            #   postgresql-libs
            #   jdk7-openjdk
            # ---

            # echo
            # echo "$gc" | $docker_bash || true
            # echo
            # $docker_exec $upgrade

      - run:
          name: "[C] Verify J*7"
          command: |
            cat <<EOF | $docker_bash
            archlinux-java status
            echo
            java -version
            echo
            java -version |& grep -F 1.7 &>/dev/null
            EOF

      # - checkout # github -> /root/project

      - run:
          name: "[M] steal file"
          command: |
            $docker_cp $container:/nproc /d_nproc
            $docker_cp $container:/cpuinfo /d_cpuinfo

      # https://circleci.com/docs/2.0/artifacts/#artifacts-overview
      - store_artifacts:
          path: /m_nproc
      - store_artifacts:
          path: /m_cpuinfo
      - store_artifacts:
          path: /d_nproc
      - store_artifacts:
          path: /d_cpuinfo
