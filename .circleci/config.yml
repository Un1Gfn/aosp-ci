# https://github.com/Un1Gfn/avx/blob/master/.circleci/config.yml

# /exp01/config.yml
# /exp02/config.yml
# /.circleci/config.yml

version: 2

jobs:

  build:

    # https://circleci.com/docs/2.0/configuration-reference/#available-machine-images
    # Xenial Xerus
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: false

    resource_class: medium

    steps:

      # https://hub.docker.com/_/archlinux/?tab=tags
      - run:
          name: "[M] Prepare docker"
          command: |
            sudo -i docker images
            sudo -i docker pull archlinux:20200407
            sudo -i docker images

      - run:
          name: "[D] check pacman"
          command: |
            cat <<EOF | sudo -i docker run -i -m 6.5G archlinux:20200407 /bin/bash -eo pipefail
            pacman --version
            EOF

      - run:
          name: "[D] gen file"
          command: |
            cat <<EOF | sudo -i docker run -i -m 6.5G archlinux:20200407 /bin/bash -eo pipefail
            ls /garbage || true
            echo "$RANDOM $RANDOM $RANDOM" >/garbage
            cat /garbage
            EOF

      - run:
          name: "[D] show file (not preserved, fail)"
          command: |
            cat <<EOF | sudo -i docker run -i -m 6.5G archlinux:20200407 /bin/bash -eo pipefail
            cat /garbage
            EOF

      - run:
          name: "[M] Stop for SSH"
          command: |
            echo
            i=0
            while true; do
              sleep 60
              i=$((i+1))
              echo "$i min"
            done
            /usr/bin/false

      # - run:
      #     name: "[D] steal file"
      #     command: |

      # All the hassle that ...
      # ... needed deps are not removed and installed again
      # ... uneeded deps are not upgraded before removed

      # udpate -> unreg||true -> partial -> gc||true -> upgrade
      - run:
          name: BASH_ENV
          # https://circleci.com/docs/2.0/env-vars/#using-bash_env-to-set-environment-variables
          command: |
            cat <<EOF >>"$BASH_ENV"
            export update="pacman -Syy --noprogressbar"
            export unreg="pacman -D --asdeps"
            export partial="pacman -S --needed --nodeps --noprogressbar --noconfirm" # one --nodeps skil ver chk
            export gc="pacman -Rssc --noprogressbar --noconfirm \$(pacman -Qdttq)"
            export upgrade="pacman -Suu --noprogressbar --noconfirm"
            ###
            export PG_ROLE="postgres"
            export EXP="exp02"
            export EXP_DIR="/root/project/\$EXP"
            export PROJ_DIR="/root/project"
            export CONNINFO="postgresql://localhost:5432"
            export psql_manage="psql -d \$CONNINFO/postgres --user=\$PG_ROLE"
            export psql_benchmarksql="psql -d \$CONNINFO/benchmarksql --user=\$PG_ROLE"
            # https://wiki.archlinux.org/index.php/Java#Tips_and_tricks
            export _JAVA_OPTIONS="-Xmx3072M"
            EOF
            source "$BASH_ENV"

      - run:
          name: Pacman
          command: |
            $update
            cat <<"---" | xargs $unreg || true
              llvm-libs
              gcc-libs
              pcre
              gpm
              libpng
              avahi
            ---
            cat <<"---" | xargs $partial
              git rxvt-unicode-terminfo openssh nmap
              wget tree nano vim pv xz unzip lsof pciutils tmux
              postgresql-libs
              jdk7-openjdk
            ---
            echo
            $gc || true
            echo
            $upgrade

      - run:
          name: Hardware info
          command: |
            pwd
            echo "$(nproc) $(nproc --all)" | tee /nproc
            lspci &>/lspci
            tee </proc/cpuinfo /cpuinfo

      - run:
          name: Verify J*7
          command: |
            archlinux-java status
            echo
            java -version
            echo
            java -version |& grep -F 1.7 >/dev/null

      - checkout # github -> /root/project

      # https://circleci.com/docs/2.0/artifacts/#artifacts-overview
      - store_artifacts:
          path: /nproc
      - store_artifacts:
          path: /lspci
      - store_artifacts:
          path: /cpuinfo
      - store_artifacts:
          path: /sql_benchmarksql.log
      - store_artifacts:
          path: /sql_schema.out
      - store_artifacts:
          path: /sql_benchmarksql.out
      - store_artifacts:
          path: /sql_benchmarksql.out.xz
