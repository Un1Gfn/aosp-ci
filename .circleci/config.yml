# https://github.com/Un1Gfn/avx/blob/master/.circleci/config.yml

# /exp01/config.yml
# /exp02/config.yml
# /.circleci/config.yml

version: 2

jobs:

  build:

    # https://circleci.com/docs/2.0/configuration-reference/#available-machine-images
    # Xenial Xerus
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: false

    resource_class: medium

    steps:

      - run:
          name: "[M] chpasswd"
          command: |
            echo "root:1" | sudo chpasswd

      - run:
          name: "[M] Hardware info"
          command: |
            pwd
            echo "$(nproc) $(nproc --all)" | sudo tee /m_nproc
            sudo tee </proc/cpuinfo /m_cpuinfo

      # https://hub.docker.com/_/archlinux/?tab=tags
      # https://stackoverflow.com/questions/28574433/do-docker-containers-retain-file-changes
      # https://stackoverflow.com/questions/2935183/bash-infinite-sleep-infinite-blocking
      - run:
          name: "[M] BASH_ENV"
          command: |
            cat <<"EOF" >"$BASH_ENV"
            # 
            export RAM=7168M
            export container="arch"
            export img="archlinux:20200407"
            #
            export docker_run="sudo -i docker run -d --memory $RAM --memory-swap $RAM --name $container --privileged -u 0:0 -w / $img /bin/sleep 1d"
            export docker_exec="sudo -i docker exec -i $container"
            export docker_bash="$docker_exec /bin/bash -eo pipefail"
            # export docker_it="sudo -i docker exec -it $container /bin/bash"
            export docker_cp="sudo -i docker cp"
            #
            export  update="pacman -Syy --noprogressbar"
            export   unreg="pacman -D --asdeps"
            export partial="pacman -S --needed --nodeps --noprogressbar --noconfirm" # one --nodeps skip ver chk only
            export      gc='pacman -Rssc --noprogressbar --noconfirm $(pacman -Qdttq)'
            export upgrade="pacman -Suu --noprogressbar --noconfirm"
            #
            export PROJ_DIR="/root/project"
            export _JAVA_OPTIONS="-Xmx$RAM"
            #
            EOF
            source "$BASH_ENV"

      - run:
          name: "[M] Prepare docker"
          command: |
            sudo -i docker images
            sudo -i docker pull "$img"
            sudo -i docker images
            # sudo -i docker rm $(docker ps -a -q)
            $docker_run

      # - run:
      #     name: "[M] Stop"
      #     command: |
      #       /usr/bin/false

      # - run:
      #     name: "[M] Wait for SSH"
      #     command: |
      #       echo
      #       i=0
      #       while true; do
      #         sleep 60
      #         i=$((i+1))
      #         echo "$i min"
      #       done
      #       /usr/bin/false

      # All the hassle that ...
      # ... needed deps are not removed and installed again
      # ... uneeded deps are not upgraded before removed

      # Misleading
      # - run:
      #     name: "[M] copy BASH_ENV to container"
      #     # https://circleci.com/docs/2.0/env-vars/#using-bash_env-to-set-environment-variables
      #     command: |
      #       $docker_cp "$BASH_ENV" "$container":/etc/profile.d/circleci.sh

      - run:
          name: "[D] Hardware info"
          command: |
            cat <<"EOF" | $docker_bash
            echo "$(nproc) $(nproc --all)" | tee /nproc
            tee </proc/cpuinfo /cpuinfo
            EOF

      # udpate -> unreg||true -> partial -> gc||true -> upgrade
      - run:
          name: "[D] Pacman"
          command: |
            $docker_exec $update
            cat <<"---" | xargs $docker_exec $unreg || true
              llvm-libs
              gcc-libs
              pcre
              gpm
              libpng
              avahi
            ---
            cat <<"---" | xargs $docker_exec $partial
              git rxvt-unicode-terminfo openssh nmap
              wget tree nano vim pv xz unzip lsof pciutils tmux
              postgresql-libs
              jdk7-openjdk
            ---
            echo
            echo "$gc" | $docker_bash || true
            echo
            $docker_exec $upgrade

      - run:
          name: Verify J*7
          command: |
            cat <<EOF | $docker_bash
            archlinux-java status
            echo
            java -version
            echo
            java -version |& grep -F 1.7 &>/dev/null
            EOF

      # - checkout # github -> /root/project

      - run:
          name: "[M] steal file"
          command: |
            $docker_cp $container:/nproc /d_nproc
            $docker_cp $container:/cpuinfo /d_cpuinfo

      # https://circleci.com/docs/2.0/artifacts/#artifacts-overview
      - store_artifacts:
          path: /m_nproc
      - store_artifacts:
          path: /m_cpuinfo
      - store_artifacts:
          path: /d_nproc
      - store_artifacts:
          path: /d_cpuinfo
      - store_artifacts:
          path: /garbage_artifact
